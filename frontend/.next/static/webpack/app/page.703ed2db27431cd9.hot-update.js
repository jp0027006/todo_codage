"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/services/todoService.ts":
/*!*************************************!*\
  !*** ./src/services/todoService.ts ***!
  \*************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   completeTodo: () => (/* binding */ completeTodo),\n/* harmony export */   createTodo: () => (/* binding */ createTodo),\n/* harmony export */   deleteTodo: () => (/* binding */ deleteTodo),\n/* harmony export */   getTodo: () => (/* binding */ getTodo),\n/* harmony export */   getTodoById: () => (/* binding */ getTodoById),\n/* harmony export */   updateTodo: () => (/* binding */ updateTodo)\n/* harmony export */ });\n/* harmony import */ var _lib_graphql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/lib/graphql */ \"(app-pages-browser)/./src/lib/graphql.ts\");\n/* harmony import */ var _lib_TodoApiClient__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/TodoApiClient */ \"(app-pages-browser)/./src/lib/TodoApiClient.ts\");\n/* harmony import */ var jwt_decode__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! jwt-decode */ \"(app-pages-browser)/./node_modules/jwt-decode/build/esm/index.js\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! graphql */ \"(app-pages-browser)/./node_modules/graphql/language/printer.mjs\");\n\n\n\n\nconst apiClient = new _lib_TodoApiClient__WEBPACK_IMPORTED_MODULE_1__[\"default\"]();\nfunction parseTokenForUserId(token) {\n    try {\n        const decoded = (0,jwt_decode__WEBPACK_IMPORTED_MODULE_2__.jwtDecode)(token);\n        return (decoded === null || decoded === void 0 ? void 0 : decoded.userId) || null;\n    } catch (e) {\n        console.error(\"Error decoding token\", e);\n        return null;\n    }\n}\n// export async function getTodo({\n//   token,\n// }: {\n//   token: string | undefined;\n// }): Promise<Todo[] | undefined> {\n//   if (!token) {\n//     console.log(\"No token provided\");\n//     return undefined;\n//   }\n//   const userId = parseTokenForUserId(token);\n//   if (!userId) {\n//     console.error(\"No userId found in token\");\n//     return undefined;\n//   }\n//   try {\n//     const todos = await apiClient.getUserTodos(userId.toString());\n//     console.log(\"Fetched Todos:\", todos);\n//     return todos;\n//   } catch (error) {\n//     console.log(\"Error fetching todos\", error);\n//     return undefined;\n//   }\n// }\nasync function getTodo(param) {\n    let { token } = param;\n    if (!token) {\n        console.log(\"No token provided\");\n        return undefined;\n    }\n    try {\n        var _data_data;\n        const queryString = (0,graphql__WEBPACK_IMPORTED_MODULE_3__.print)(_lib_graphql__WEBPACK_IMPORTED_MODULE_0__.GET_USER_TODOS); // Convert query AST to string\n        const response = await fetch(\"http://localhost:5000/graphql\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                authentication: token ? \"\".concat(token) : \"\"\n            },\n            body: JSON.stringify({\n                query: queryString,\n                variables: {\n                    userId: token\n                }\n            })\n        });\n        if (!response.ok) {\n            const errorMessage = \"Error fetching todos: \".concat(response.status, \" - \").concat(response.statusText);\n            console.log(errorMessage);\n            return undefined;\n        }\n        const data = await response.json();\n        return data === null || data === void 0 ? void 0 : (_data_data = data.data) === null || _data_data === void 0 ? void 0 : _data_data.getUserTodos;\n    } catch (error) {\n        console.log(\"Error sending request to get todos\", error);\n        return undefined;\n    }\n}\nasync function createTodo(param) {\n    let { title, description, token, completed } = param;\n    if (!token) {\n        throw new Error(\"No token provided\");\n    }\n    try {\n        const newTodo = await apiClient.createTodo({\n            title,\n            description,\n            completed,\n            token\n        });\n        return newTodo;\n    } catch (error) {\n        if (error instanceof Error) {\n            throw new Error(\"Error creating todo: \".concat(error.message));\n        } else {\n            throw new Error(\"Unexpected error occurred while creating todo.\");\n        }\n    }\n}\nasync function deleteTodo(param) {\n    let { id } = param;\n    try {\n        const result = await apiClient.deleteTodo({\n            id\n        });\n        return result;\n    } catch (error) {\n        console.error(\"Error deleting todo\", error);\n        throw error;\n    }\n}\nasync function completeTodo(param) {\n    let { id, completed } = param;\n    const isCompleted = completed !== null && completed !== void 0 ? completed : false;\n    try {\n        const updatedTodo = await apiClient.completeTodo({\n            id,\n            completed: isCompleted\n        });\n        return {\n            success: true,\n            todo: updatedTodo\n        };\n    } catch (error) {\n        console.log(\"Error completing todo\", error);\n        return null;\n    }\n}\n// Function to get todo by it's id\nasync function getTodoById(param) {\n    let { id } = param;\n    try {\n        const todo = await apiClient.getTodoById({\n            id\n        });\n        return todo;\n    } catch (error) {\n        console.log(\"Error fetching todo by ID\", error);\n        return undefined;\n    }\n}\n// Function to update todo\nasync function updateTodo(param) {\n    let { id, title, description, completed } = param;\n    try {\n        const result = await apiClient.updateTodo({\n            id,\n            title,\n            description,\n            completed\n        });\n        return result;\n    } catch (error) {\n        console.error(\"Error updating todo\", error);\n        throw new Error(\"Error updating todo\");\n    }\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/services/todoService.ts\n"));

/***/ })

});